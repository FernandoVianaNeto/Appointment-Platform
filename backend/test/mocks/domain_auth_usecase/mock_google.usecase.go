// Code generated by MockGen. DO NOT EDIT.
// Source: google.usecase.go
//
// Generated by this command:
//
//	mockgen -source google.usecase.go -package domain_auth_usecase -destination /home/fernandoviana/Documentos/Appointment-Platform/backend/test/mocks/domain_auth_usecase/mock_google.usecase.go
//

// Package domain_auth_usecase is a generated GoMock package.
package domain_auth_usecase

import (
	dto "appointment-platform-backend-backend/internal/domain/dto"
	domain_response "appointment-platform-backend-backend/internal/domain/response"
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGoogleAuthUsecaseInterface is a mock of GoogleAuthUsecaseInterface interface.
type MockGoogleAuthUsecaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGoogleAuthUsecaseInterfaceMockRecorder
	isgomock struct{}
}

// MockGoogleAuthUsecaseInterfaceMockRecorder is the mock recorder for MockGoogleAuthUsecaseInterface.
type MockGoogleAuthUsecaseInterfaceMockRecorder struct {
	mock *MockGoogleAuthUsecaseInterface
}

// NewMockGoogleAuthUsecaseInterface creates a new mock instance.
func NewMockGoogleAuthUsecaseInterface(ctrl *gomock.Controller) *MockGoogleAuthUsecaseInterface {
	mock := &MockGoogleAuthUsecaseInterface{ctrl: ctrl}
	mock.recorder = &MockGoogleAuthUsecaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGoogleAuthUsecaseInterface) EXPECT() *MockGoogleAuthUsecaseInterfaceMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockGoogleAuthUsecaseInterface) Execute(ctx context.Context, input dto.GoogleAuthInputDto) (domain_response.AuthResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", ctx, input)
	ret0, _ := ret[0].(domain_response.AuthResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Execute indicates an expected call of Execute.
func (mr *MockGoogleAuthUsecaseInterfaceMockRecorder) Execute(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockGoogleAuthUsecaseInterface)(nil).Execute), ctx, input)
}
