// Code generated by MockGen. DO NOT EDIT.
// Source: list_appointment.go
//
// Generated by this command:
//
//	mockgen -source list_appointment.go -package domain_usecase_appointment -destination /home/fernandoviana/Documentos/Appointment-Platform/backend/test/mocks/domain_usecase_appointment/mock_list_appointment.go
//

// Package domain_usecase_appointment is a generated GoMock package.
package domain_usecase_appointment

import (
	dto "appointment-platform-backend-backend/internal/domain/dto"
	response "appointment-platform-backend-backend/internal/domain/response"
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockListAppointmentsUsecaseInterface is a mock of ListAppointmentsUsecaseInterface interface.
type MockListAppointmentsUsecaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockListAppointmentsUsecaseInterfaceMockRecorder
	isgomock struct{}
}

// MockListAppointmentsUsecaseInterfaceMockRecorder is the mock recorder for MockListAppointmentsUsecaseInterface.
type MockListAppointmentsUsecaseInterfaceMockRecorder struct {
	mock *MockListAppointmentsUsecaseInterface
}

// NewMockListAppointmentsUsecaseInterface creates a new mock instance.
func NewMockListAppointmentsUsecaseInterface(ctrl *gomock.Controller) *MockListAppointmentsUsecaseInterface {
	mock := &MockListAppointmentsUsecaseInterface{ctrl: ctrl}
	mock.recorder = &MockListAppointmentsUsecaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockListAppointmentsUsecaseInterface) EXPECT() *MockListAppointmentsUsecaseInterfaceMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockListAppointmentsUsecaseInterface) Execute(ctx context.Context, input dto.ListAppointmentInputDto) (response.ListAppointmentsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", ctx, input)
	ret0, _ := ret[0].(response.ListAppointmentsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Execute indicates an expected call of Execute.
func (mr *MockListAppointmentsUsecaseInterfaceMockRecorder) Execute(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockListAppointmentsUsecaseInterface)(nil).Execute), ctx, input)
}
